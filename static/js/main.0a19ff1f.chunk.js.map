{"version":3,"sources":["apiCalls.js","Question/Question.js","Display/Display.js","App/App.js","reportWebVitals.js","index.js"],"names":["getData","fetch","then","resp","json","Question","props","componentDidMount","setState","correct","selected","sortChoices","wrong","incorrect","right","concat","sort","decodeChoices","map","answer","he","decode","handleClick","event","target","closest","children","innerText","updateAnswers","id","checkAnswer","state","checkSubmitted","index","letter","className","onClick","style","display","checkSelected","gameOver","this","q","Component","Display","questions","scoreQuiz","score","reset","questionList","question","Date","now","correct_answer","incorrect_answers","window","scrollTo","App","data","results","number","isCorrect","prevState","answers","a","userAnswers","Object","values","numCorrect","forEach","length","resetApp","0","1","2","3","4","5","6","7","8","9","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a19ff1f.chunk.js","sourcesContent":["export const getData = () => {\n  return fetch('https://opentdb.com/api.php?amount=10&category=11&difficulty=medium&type=multiple')\n  .then(resp => resp.json())\n}\n","import React, { Component } from 'react';\nimport './Question.css';\nimport he from 'he';\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      correct: '',\n      selected: ''\n    }\n  }\n\n  componentDidMount = () => {\n    this.setState({ correct: this.props.correct, selected: '' })\n  }\n\n  sortChoices = () => {\n    let wrong = this.props.incorrect;\n    let right = [this.props.correct];\n    let allAnswers = wrong.concat(right)\n    return allAnswers.sort();\n  }\n\n  decodeChoices = () => {\n    const decodedChoices = this.sortChoices().map(answer => he.decode(answer));\n    return decodedChoices;\n  }\n\n  handleClick = (event) => {\n    const answer = event.target.closest('div').children[0].innerText;\n    this.setState({ selected: answer });\n    this.props.updateAnswers(this.props.id, this.checkAnswer(answer))\n  }\n\n  checkAnswer= (answer) => {\n    return (answer === this.state.correct) ? true : false;\n  }\n\n  checkSubmitted = (index, letter) => {\n    if (this.state.correct === this.decodeChoices()[index]) {\n      return (\n        <div className='correct' onClick={ this.handleClick }>{`${letter}) `}\n        <p style={{display: 'inline'}}>\n        { `${this.decodeChoices()[index]}` }\n        </p>\n        </div> )\n      } else {\n        return (\n          <div className='choice' onClick={ this.handleClick }>{`${letter}) `}\n          <p style={{display: 'inline'}}>\n          { `${this.decodeChoices()[index]}` }\n          </p>\n          </div>)\n        }\n      }\n\n  checkSelected = (index, letter) => {\n    const correct = this.state.correct;\n    const gameOver = this.props.gameOver;\n    if (this.state.selected === this.decodeChoices()[index] && gameOver === false) {\n      return (\n        <div className='selected' onClick={ this.handleClick }>{`${letter}) `}\n          <p style={{display: 'inline'}}>\n            { `${this.decodeChoices()[index]}` }\n          </p>\n        </div>\n      )\n    } else if (this.state.selected === this.decodeChoices()[index] && gameOver === true) {\n      return (\n        <div className={ `selected ${ correct === this.decodeChoices()[index] ? 'correct' : 'incorrect'}` } onClick={ this.handleClick }>{`${letter}) `}\n          <p style={{display: 'inline'}}>\n            { `${this.decodeChoices()[index]}` }\n          </p>\n        </div>\n      )\n    } else if (this.state.selected !== this.decodeChoices()[index] && gameOver === true) {\n      return (\n        <div className={`choice ${ correct === this.decodeChoices()[index] ? 'correct' : ''}` } onClick={ this.handleClick }>{`${letter}) `}\n          <p style={{display: 'inline'}}>\n            { `${this.decodeChoices()[index]}` }\n          </p>\n        </div>\n      )\n    } else {\n      return (\n        <div className='choice' onClick={ this.handleClick }>{`${letter}) `}\n          <p style={{display: 'inline'}}>\n            { `${this.decodeChoices()[index]}` }\n          </p>\n        </div>\n      )\n    }\n  }\n\n\n  render() {\n    const { q, id, gameOver } = this.props;\n    return (\n      <article className='question-and-answers'>\n        <h4 className='question'>{ `${ id+1 }. ${ he.decode(q) }` }</h4>\n        <div className='mult-choices'>\n          { this.checkSelected(0, 'a') }\n          { this.checkSelected(1, 'b') }\n          { this.checkSelected(2, 'c') }\n          { this.checkSelected(3, 'd') }\n        </div>\n      </article>\n    )\n  }\n}\n\nexport default Question\n","import React from 'react';\nimport './Display.css';\nimport Question from '../Question/Question.js';\n\nconst Display = ({ questions, updateAnswers, scoreQuiz, score, reset, gameOver }) => {\n  const questionList = questions.map((question, index) => {\n    const randomNum = Date.now();\n    return (\n      <Question\n        key={ `${index}${question.correct_answer}`  }\n        id = { index }\n        q={ question.question }\n        correct={ question.correct_answer }\n        incorrect={ question.incorrect_answers }\n        updateAnswers={ updateAnswers }\n        gameOver={ gameOver }\n      />\n    )\n  })\n\n  const showScore = () => {\n    scoreQuiz();\n    window.scrollTo(0, 0)\n  }\n\n  const restartGame = () => {\n    reset();\n    window.scrollTo(0, 0)\n  }\n\n  return (\n    <section className='question-display'>\n      { score === '' &&\n        <h2>Choose the correct answer for each question.</h2>\n      }\n      { score !== '' &&\n        <div className='results'>\n          <h3 className='user-score'>You answered { score } questions correctly!</h3>\n          <button className='restart' onClick={ restartGame }><b>Play again</b></button>\n        </div>\n      }\n      { questionList }\n      <button className=\"submit\" onClick={ showScore }><b>What's my score?</b>\n      </button>\n    </section>\n  )\n}\n\nexport default Display;\n","import './App.css';\nimport React, { Component } from 'react';\nimport { getData } from '../apiCalls.js';\nimport Display from '../Display/Display.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      answers: { 0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false },\n      score: '',\n      gameOver: false\n    }\n  }\n\n  componentDidMount = () => {\n    getData()\n    .then(data => this.setState({ questions: data.results }))\n  }\n\n  updateAnswers = (number, isCorrect) => {\n    this.setState(prevState => ({\n      answers: {\n        ...prevState.answers,\n        [number]: isCorrect\n      }\n    }))\n  }\n\n  scoreQuiz = async () => {\n    const userAnswers = Object.values(this.state.answers);\n    let numCorrect = 0;\n    userAnswers.forEach(answer => {\n      if (answer === true) {\n        numCorrect += 1;\n      }\n    });\n    await this.setState({ score: `${numCorrect} out of ${userAnswers.length}`, gameOver: true })\n    return `${numCorrect}/${userAnswers.length}`;\n  }\n\n  resetApp = async () => {\n    this.setState({ answers: { 0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false }, score: '' });\n    await getData()\n    .then(data => this.setState({ questions: data.results, gameOver: false }))\n  }\n\n  render() {\n    console.log(this.state.questions[0])\n    return (\n      <div className=\"App\">\n        <h1 className='greeting'>Welcome to Film Trivia!</h1>\n        <main className=\"App-main\">\n          <Display\n            questions={ this.state.questions }\n            updateAnswers={ this.updateAnswers }\n            scoreQuiz={ this.scoreQuiz }\n            score={ this.state.score }\n            reset={ this.resetApp }\n            gameOver={ this.state.gameOver }\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}