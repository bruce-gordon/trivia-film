{"version":3,"sources":["apiCalls.js","Question/Question.js","Display/Display.js","App/App.js","reportWebVitals.js","index.js"],"names":["getData","fetch","then","resp","json","Question","props","sortChoices","wrong","incorrect","right","correct","concat","sort","decodeChoices","map","answer","he","decode","handleClick","event","target","closest","children","innerText","setState","selected","updateAnswers","id","checkAnswer","state","checkSelected","index","letter","className","onClick","style","display","this","q","Component","Display","questions","scoreQuiz","score","reset","questionList","question","correct_answer","incorrect_answers","window","scrollTo","App","componentDidMount","data","results","number","isCorrect","prevState","answers","a","userAnswers","Object","values","numCorrect","forEach","length","resetApp","0","1","2","3","4","5","6","7","8","9","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53a7e90d.chunk.js","sourcesContent":["export const getData = () => {\n  return fetch('https://opentdb.com/api.php?amount=10&category=11&difficulty=medium&type=multiple')\n  .then(resp => resp.json())\n}\n","import React, { Component } from 'react';\nimport './Question.css';\nimport he from 'he';\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      correct: this.props.correct,\n      selected: ''\n    }\n  }\n\n  sortChoices = () => {\n    let wrong = this.props.incorrect;\n    let right = [this.props.correct];\n    let allAnswers = wrong.concat(right)\n    return allAnswers.sort();\n  }\n\n  decodeChoices = () => {\n    const decodedChoices = this.sortChoices().map(answer => he.decode(answer));\n    return decodedChoices;\n  }\n\n  handleClick = (event) => {\n    const answer = event.target.closest('div').children[0].innerText;\n    this.setState({ selected: answer });\n    this.props.updateAnswers(this.props.id, this.checkAnswer(answer))\n  }\n\n  checkAnswer= (answer) => {\n    return (answer === this.state.correct) ? true : false;\n  }\n\n  checkSelected = (index, letter) => {\n    if (this.state.selected === this.decodeChoices()[index]) {\n      return (\n      <div className='selected' onClick={ this.handleClick }>{`${letter}) `}\n        <p style={{display: 'inline'}}>\n          { `${this.decodeChoices()[index]}` }\n        </p>\n      </div> )\n    } else {\n      return (\n      <div className='choice' onClick={ this.handleClick }>{`${letter}) `}\n        <p style={{display: 'inline'}}>\n          { `${this.decodeChoices()[index]}` }\n        </p>\n      </div>)\n    }\n  }\n\n  render() {\n    const { q, id } = this.props;\n    return (\n      <article className='question-and-answers'>\n        <h4 className='question'>{ `${ id+1 }. ${ he.decode(q) }` }</h4>\n        <div className='mult-choices'>\n          { this.checkSelected(0, 'a') }\n          { this.checkSelected(1, 'b') }\n          { this.checkSelected(2, 'c') }\n          { this.checkSelected(3, 'd') }\n        </div>\n      </article>\n    )\n  }\n}\n\nexport default Question\n","import React from 'react';\nimport './Display.css';\nimport Question from '../Question/Question.js';\n\nconst Display = ({ questions, updateAnswers, scoreQuiz, score, reset }) => {\n  const questionList = questions.map((question, index) => {\n    return (\n      <Question\n        key={ index }\n        id = { index }\n        q={ question.question }\n        correct={ question.correct_answer }\n        incorrect={ question.incorrect_answers }\n        updateAnswers={ updateAnswers }\n      />\n    )\n  })\n\n  const showScore = () => {\n    scoreQuiz();\n    window.scrollTo(0, 0)\n  }\n\n  const restartGame = () => {\n    reset();\n    window.scrollTo(0, 0)\n  }\n\n  return (\n    <section className='question-display'>\n      { score === '' &&\n        <h2>Choose the correct answer for each question.</h2>\n      }\n      { score !== '' &&\n        <div className='results'>\n          <h3 className='user-score'>You answered { score } questions correctly!</h3>\n          <button className='restart' onClick={ restartGame }><b>Play again</b></button>\n        </div>\n      }\n      { questionList }\n      <button className=\"submit\" onClick={ showScore }><b>What's my score?</b>\n      </button>\n    </section>\n  )\n}\n\nexport default Display;\n","import './App.css';\nimport React, { Component } from 'react';\nimport { getData } from '../apiCalls.js';\nimport Display from '../Display/Display.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      answers: { 0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false },\n      score: ''\n    }\n  }\n\n  componentDidMount = () => {\n    getData()\n    .then(data => this.setState({ questions: data.results }))\n  }\n\n  updateAnswers = (number, isCorrect) => {\n    this.setState(prevState => ({\n      answers: {\n        ...prevState.answers,\n        [number]: isCorrect\n      }\n    }))\n  }\n\n  scoreQuiz = async () => {\n    const userAnswers = Object.values(this.state.answers);\n    let numCorrect = 0;\n    userAnswers.forEach(answer => {\n      if (answer === true) {\n        numCorrect += 1;\n      }\n    });\n    await this.setState({ score: `${numCorrect} out of ${userAnswers.length}` })\n    return `${numCorrect}/${userAnswers.length}`;\n  }\n\n  resetApp = async () => {\n    this.setState({ answers: { 0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false }, score: '' });\n    await getData()\n    .then(data => this.setState({ questions: data.results }))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className='greeting'>Welcome to Film Trivia!</h1>\n        <main className=\"App-main\">\n          <Display\n            questions={ this.state.questions }\n            updateAnswers={ this.updateAnswers }\n            scoreQuiz={ this.scoreQuiz }\n            score={ this.state.score }\n            reset={ this.resetApp }\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}